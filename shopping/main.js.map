{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<header role=\\\"header\\\" *ngIf=\\\"cartItems\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-8 col-sm-12\\\">\\n        <h1 class=\\\"shopping-bag-header\\\">Your Shopping Bag</h1>\\n      </div>\\n      <div class=\\\"col-4 d-sm-none\\\">\\n        <p class=\\\"cart-items cart-items-mobile\\\"><b>{{cartItems.length}}</b> Items</p>\\n      </div>\\n    </div>\\n  </div>\\n</header>\\n\\n<main role=\\\"main\\\" *ngIf=\\\"cartItems\\\">\\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"cart-header-row-wrap d-none d-sm-block\\\">\\n      <div class=\\\"row text-uppercase cart-header-row\\\">\\n        <div class=\\\"col-sm-9\\\">\\n          <p class=\\\"cart-items\\\"><b>{{cartItems.length}}</b> Items</p>\\n        </div>\\n        <div class=\\\"col-sm-1 cart-column-header text-center\\\"><p>size</p></div>\\n        <div class=\\\"col-sm-1 cart-column-header text-center\\\"><p>qty</p></div>\\n        <div class=\\\"col-sm-1 cart-column-header text-center\\\"><p>price</p></div>\\n      </div>\\n    </div>\\n\\n    <h1 class=\\\"cart-empty\\\" *ngIf=\\\"!(cartItems.length > 0)\\\">Your shopping bag is empty!</h1>\\n    <div class=\\\"line-items-container\\\" *ngIf=\\\"cartItems.length > 0\\\">\\n\\n      <div class=\\\"row text-uppercase cart-line-item-row\\\" *ngFor=\\\"let item of cartItems; let i = index\\\">\\n        <div class=\\\"col-12 col-sm-9\\\">\\n\\n          <div>\\n\\n            <div>\\n              <figure class=\\\"float-left cart-product-image\\\">\\n                <img [src]=\\\"'assets/' + item.p_image + '.jpg'\\\" alt=\\\"black t shirt\\\">\\n              </figure>\\n\\n              <div class=\\\"cart-product-description\\\">\\n                <h3>{{item.p_name}}</h3>\\n                <p><span class=\\\"text-capitalize\\\">style</span> #: <span class=\\\"text-uppercase\\\">{{item.p_style}}</span></p>\\n                <p class=\\\"text-capitalize\\\">colour: {{item.p_selected_color.name}}</p>\\n                <p class=\\\"text-capitalize d-sm-none\\\">size: {{item.p_selected_size.code}}</p>\\n\\n                <p class=\\\"text-uppercase d-sm-none cart-line-item-qty-mobile\\\">qty: <span class=\\\"qty\\\">{{item.p_quantity}}</span></p>\\n                <p class=\\\"text-capitalize d-sm-none original-price\\\" *ngIf=\\\"item.p_price != item.p_originalprice\\\">\\n                  <sup>$</sup><span style=\\\"font-size: 18px;\\\"> {{item.p_quantity * item.p_originalprice}}</span></p>\\n                <p class=\\\"text-capitalize d-sm-none price-mobile\\\"><sup>$</sup><span style=\\\"font-size: 18px;\\\"> {{item.p_quantity * item.p_price}}</span></p>\\n              </div>\\n\\n              <div class=\\\"clearfix-mobile\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"text-uppercase line-item-actions float-left\\\">\\n              <button (click)=\\\"onEditClick(item, i)\\\">edit</button>\\n              <button (click)=\\\"onRemove(i)\\\">X remove</button>\\n              <button>save for later</button>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"col-sm-1 cart-column-header font-weight-bold text-uppercase d-none d-sm-block text-center\\\"><p>{{item.p_selected_size.code}}</p></div>\\n        <div class=\\\"col-sm-1 cart-column-header font-weight-bold text-uppercase d-none d-sm-block text-center\\\"><p class=\\\"qty\\\">{{item.p_quantity}}</p></div>\\n        <div class=\\\"col-sm-1 cart-column-header font-weight-bold text-uppercase d-none d-sm-block text-center\\\">\\n          <p class=\\\"original-price\\\" *ngIf=\\\"item.p_price != item.p_originalprice\\\"><sup>$</sup>{{item.p_quantity * item.p_originalprice}}</p>\\n          <br>\\n          <p class=\\\"discount-price\\\"><sup>$</sup>{{item.p_quantity * item.p_price}}</p>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"row\\\" style=\\\"margin-top: 20px;\\\" *ngIf=\\\"(cartItems.length > 0)\\\">\\n      <div class=\\\"col-sm-4 d-none d-sm-block\\\">\\n        <p style=\\\"font-weight: bold;\\\">Need Help</p>\\n        <p style=\\\"font-weight: bold;\\\">or have question?</p>\\n        <br>\\n        <p>Call Customer Service at</p>\\n        <p>1-800-555-5555</p>\\n        <br>\\n        <p style=\\\"text-decoration: underline\\\">Chat with one of our stylist</p>\\n        <br>\\n        <p style=\\\"text-decoration: underline\\\">See return & exchange policy</p>\\n      </div>\\n\\n      <div class=\\\"col-12 col-sm-8\\\">\\n\\n        <div class=\\\"promo-code\\\">\\n          <p style=\\\"margin-bottom: 8px;\\\">ENTER PROMOTION CODE OR GIFT CARD</p>\\n          <input type=\\\"text\\\">\\n          <button>APPLY</button>\\n        </div>\\n\\n        <div class=\\\"subtotal\\\" style=\\\"margin-top: 20px;\\\">\\n          <div class=\\\"row\\\" style=\\\"margin: 30px; margin-left: 0;\\\">\\n            <div class=\\\"col-6\\\"><h6>SUBTOTAL</h6></div>\\n            <div class=\\\"col-6 text-right\\\"><h6><SUP>$</SUP>{{getSubTotal()}}</h6></div>\\n          </div>\\n\\n          <div class=\\\"row\\\" style=\\\"margin: 30px; margin-left: 0;\\\">\\n            <div class=\\\"col-6\\\"><h6>PROMOTION CODE JF10 APPLIED</h6></div>\\n            <div class=\\\"col-6 text-right\\\"><h6>-  <SUP>$</SUP>7.00 </h6></div>\\n          </div>\\n\\n          <div class=\\\"row\\\" style=\\\"margin: 30px;margin-left: 0;  border-bottom: 1px solid lightgray; padding-bottom: 30px;\\\">\\n            <div class=\\\"col-6\\\"><h6>ESTIMATED SHIPPING</h6>\\n              <P>You qualify for free shiping because your order is over $50*</P>\\n            </div>\\n            <div class=\\\"col-6 text-right\\\">\\n              <h6><sup *ngIf=\\\"!(getSubTotal()>50)\\\">$</sup>{{(getSubTotal()>50)? 'FREE' : '5'}}</h6>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\" style=\\\"margin: 30px;margin-left: 0;  border-bottom: 5px solid lightgray; padding-bottom: 30px;\\\">\\n            <div class=\\\"col-6\\\"><h6>ESTIMATED TOTAL</h6>\\n            </div>\\n            <div class=\\\"col-6 text-right\\\">\\n              <h6><h6><SUP>$</SUP>{{getSubTotal() - 7 + (getSubTotal()>50? 0 : 5)}}</h6></h6>\\n            </div>\\n\\n          </div>\\n\\n\\n        </div>\\n\\n      </div>\\n\\n\\n    </div>\\n\\n    <div class=\\\"row text-right\\\" *ngIf=\\\"(cartItems.length > 0)\\\">\\n      <div class=\\\"col-12\\\">\\n        <p class=\\\"text-uppercase\\\" class=\\\"continue-shopping\\\" style=\\\"text-decoration: underline; display: inline-block;\\\">Continue Shopping</p>\\n        <button class=\\\"checkout-btn\\\">CHECKOUT</button>\\n\\n      </div>\\n\\n      <div class=\\\"lock\\\">\\n        <img src=\\\"assets/lock.jpg\\\" alt=\\\"\\\">\\n        <span>Secure Checkout. Shopping is always safe & secure</span>\\n      </div>\\n    </div>\\n  </div>\\n</main>\\n\\n<div *ngIf=\\\"isEditModalVisible\\\"\\n     class=\\\"modal-overlay\\\">\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"editItem\\\">\\n    <button (click)=\\\"onModalClose($event)\\\" class=\\\"modal-close-btn\\\">X</button>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-sm-6\\\">\\n        <div class=\\\"text-center\\\" style=\\\"margin: 50px 0;border-top: 6px solid lightgray; padding-top: 40px;\\\">\\n\\n          <h6 class=\\\"text-uppercase\\\" style=\\\"margin-bottom: 15px;\\\">{{editItem.p_name}}</h6>\\n          <h2></h2>\\n          <h2 class=\\\"original-price\\\" *ngIf=\\\"editItem.p_price != editItem.p_originalprice\\\"><sup>$</sup>{{editItem.p_quantity * editItem.p_originalprice}}</h2>\\n          <h2 class=\\\"discount-price\\\"><sup>$</sup>{{editItem.p_quantity * editItem.p_price}}</h2>\\n\\n          <p class=\\\"text-uppercase\\\">{{editItem.p_selected_color.name}}</p>\\n          <div>\\n            <span class=\\\"color-box\\\" (click)=\\\"onColorSelect(color)\\\"\\n                  *ngFor=\\\"let color of editItem.p_available_options.colors\\\"\\n                  [ngStyle]=\\\"{'background-color': color.hexcode}\\\"></span>\\n          </div>\\n\\n          <div class=\\\"select-div\\\">\\n            <select class=\\\"text-uppercase\\\" name=\\\"\\\" [value]=\\\"editItem.p_selected_size.code\\\" (change)=\\\"onSizeChange($event)\\\">\\n              <option *ngFor=\\\"let size of editItem.p_available_options.sizes\\\"\\n                      [value]=\\\"size.code\\\">{{size.name}}</option>\\n            </select>\\n\\n            <select class=\\\"text-uppercase\\\" [value]=\\\"editItem.p_quantity\\\" (change)=\\\"onQtyChange($event)\\\">\\n              <option class=\\\"text-uppercase\\\"\\n                      *ngFor=\\\"let qty of qtyArray\\\"\\n                      [value]=\\\"qty\\\">QTY: {{qty}}</option>\\n            </select>\\n          </div>\\n\\n          <Button class=\\\"modal-edit-btn\\\" (click)=\\\"onEditSubmit(editItem)\\\">Edit</Button>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"col-12 col-sm-6\\\">\\n\\n        <figure class=\\\"modal-image\\\">\\n          <img [src]=\\\"'assets/' + editItem.p_image + '.jpg'\\\" alt=\\\"\\\">\\n        </figure>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  cartItems: any;\n  editItem: any;\n  isEditModalVisible = false;\n  qtyArray = [1, 2, 3, 4];\n  oldEditItem: any;\n  editedIndex: number;\n  isFreeShipping = false;\n  constructor(private http: HttpClient) {\n  }\n  ngOnInit() {\n    this.http.get('assets/cart.json').subscribe((data: any) => {\n      console.log(data);\n      this.cartItems = data.productsInCart;\n    });\n  }\n  onEditClick(editItem: any, index) {\n    this.isEditModalVisible = true;\n    this.editItem = editItem;\n    this.editedIndex = index;\n    this.oldEditItem = JSON.parse(JSON.stringify(editItem));\n    console.log(editItem);\n  }\n  onModalClose(event) {\n    event.stopPropagation();\n    this.cartItems[this.editedIndex] = this.oldEditItem;\n    this.isEditModalVisible = false;\n  }\n  onColorSelect(color) {\n    this.editItem.p_selected_color = color;\n  }\n  onSizeChange(event) {\n    this.editItem.p_selected_size.code = event.target.value;\n    console.log(this.editItem.p_selected_size);\n  }\n  onQtyChange(event) {\n    this.editItem.p_quantity = parseInt(event.target.value);\n  }\n  getSubTotal() {\n    let subtotal = 0;\n    for (const item of this.cartItems) {\n      subtotal += (item.p_price * item.p_quantity);\n    }\n    if (subtotal > 50) {\n      this.isFreeShipping = true;\n    }\n    return subtotal;\n  }\n  onEditSubmit() {\n    this.isEditModalVisible = false;\n  }\n  onRemove(index) {\n    this.cartItems = this.cartItems.filter((cartItem) => {\n      return cartItem != this.cartItems[index];\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}